#!/bin/bash\n\nTHEME=$1\nif [[ -z "$THEME" ]]; then echo "Usage: $0 <forest|water|desert>"; exit 1; fi\n\n# Waybar\ntheme_dir="$HOME/.config/waybar"\nln -sf "$theme_dir/colors-${THEME}.css" "$theme_dir/current-theme.css"\npkill -SIGUSR2 waybar || waybar &\n\n# Kitty\nkitty_dir="$HOME/.config/kitty"\nln -sf "$kitty_dir/colors-${THEME}.conf" "$kitty_dir/current-theme.conf"\npgrep -f "kitty" | xargs -r kill -SIGUSR1\n\n# WezTerm\nwezterm_dir="$HOME/.config/wezterm/colors"\nln -sf "colors-${THEME}.lua" "$wezterm_dir/current_theme.lua"\nwezterm cli reload-configuration &>/dev/null\n\n# Rofi\nrofi_dir="$HOME/.config/rofi/themes"\nln -sf "$rofi_dir/colors-${THEME}.rasi" "$rofi_dir/current-colors.rasi"\n\n# Alacritty\nyazi_dir="$HOME/.config/yazi"\nalacritty_dir="$HOME/.config/alacritty"\nzathura_dir="$HOME/.config/zathura"\nstarship_dir="$HOME/.config/starship"\nlazygit_dir="$HOME/.config/lazygit"\nnvim_dir="$HOME/.config/nvim/colors"\nobsidian_dir="$HOME/.config/obsidian/themes"\nfirefox_dir="$HOME/.mozilla/firefox"\nvscode_dir="$HOME/.config/Code/User"\nqt5ct_dir="$HOME/.config/qt5ct"\nqt6ct_dir="$HOME/.config/qt6ct"\n\n# Symlink per-theme configs if present\nln -sf "$alacritty_dir/colors-${THEME}.yml" "$alacritty_dir/current-theme.yml" 2>/dev/null\nln -sf "$yazi_dir/colors-${THEME}.toml" "$yazi_dir/current-theme.toml" 2>/dev/null\nln -sf "$zathura_dir/colors-${THEME}.zathurarc" "$zathura_dir/current-theme.zathurarc" 2>/dev/null\nln -sf "$starship_dir/${THEME}.toml" "$starship_dir/current-theme.toml" 2>/dev/null\nln -sf "$lazygit_dir/colors-${THEME}.yml" "$lazygit_dir/current-theme.yml" 2>/dev/null\nln -sf "$nvim_dir/${THEME}.vim" "$nvim_dir/current-theme.vim" 2>/dev/null\nln -sf "$obsidian_dir/${THEME}.css" "$obsidian_dir/current-theme.css" 2>/dev/null\nln -sf "$firefox_dir/${THEME}-userChrome.css" "$firefox_dir/userChrome.css" 2>/dev/null\nln -sf "$vscode_dir/${THEME}-settings.json" "$vscode_dir/settings.json" 2>/dev/null\nln -sf "$qt5ct_dir/colors-${THEME}.conf" "$qt5ct_dir/colors.conf" 2>/dev/null\nln -sf "$qt6ct_dir/colors-${THEME}.conf" "$qt6ct_dir/colors.conf" 2>/dev/null\n\n# GTK theme, icon, cursor (example: WhiteSur variants)\ncase $THEME in\n    forest)\n        gsettings set org.gnome.desktop.interface gtk-theme "WhiteSur-dark"\n        gsettings set org.gnome.desktop.interface icon-theme "WhiteSur-dark"\n        gsettings set org.gnome.desktop.interface cursor-theme "WhiteSur-cursors"\n        ;;\n    water)\n        gsettings set org.gnome.desktop.interface gtk-theme "WhiteSur-light"\n        gsettings set org.gnome.desktop.interface icon-theme "WhiteSur-light"\n        gsettings set org.gnome.desktop.interface cursor-theme "WhiteSur-cursors"\n        ;;\n    desert)\n        gsettings set org.gnome.desktop.interface gtk-theme "WhiteSur"\n        gsettings set org.gnome.desktop.interface icon-theme "WhiteSur"\n        gsettings set org.gnome.desktop.interface cursor-theme "WhiteSur-cursors"\n        ;;\nesac\n\n# Wallpaper: pick random from subfolder\nWALLPAPER_DIR="$HOME/Pictures/Wallpapers/${THEME}"\nif [ -d "$WALLPAPER_DIR" ]; then\n    WALLPAPER=$(find "$WALLPAPER_DIR" -type f \( -iname "*.jpg" -o -iname "*.png" -o -iname "*.webp" \) | shuf -n 1)\n    if [ -n "$WALLPAPER" ]; then\n        killall swaybg || true\n        swaybg -i "$WALLPAPER" -m fill &\n    fi\nfi\n\n# Dunst sed logic for theme colors\nDUNST_CONFIG="$HOME/.config/dunst/dunstrc"\nif [ -f "$DUNST_CONFIG" ]; then\n    case $THEME in\n        forest)\n            sed -i \\n                -e 's/#THEME_BG_COLOR#/#2A3D2F/g' \\n                -e 's/#THEME_FG_COLOR#/#D8E9D6/g' \\n                -e 's/#THEME_FRAME_COLOR#/#84B08A/g' \\n                -e 's/#THEME_URGENT_BG#/#E8A87C/g' \\n                -e 's/#THEME_URGENT_FG#/#2A3D2F/g' \\n                -e 's/#THEME_URGENT_FRAME#/#84B08A/g' "$DUNST_CONFIG"\n            ;;\n        water)\n            sed -i \\n                -e 's/#THEME_BG_COLOR#/#2E3A4E/g' \\n                -e 's/#THEME_FG_COLOR#/#E0F2F7/g' \\n                -e 's/#THEME_FRAME_COLOR#/#88C0D0/g' \\n                -e 's/#THEME_URGENT_BG#/#EBCB8B/g' \\n                -e 's/#THEME_URGENT_FG#/#2E3A4E/g' \\n                -e 's/#THEME_URGENT_FRAME#/#88C0D0/g' "$DUNST_CONFIG"\n            ;;\n        desert)\n            sed -i \\n                -e 's/#THEME_BG_COLOR#/#4D3F3A/g' \\n                -e 's/#THEME_FG_COLOR#/#F5EBDC/g' \\n                -e 's/#THEME_FRAME_COLOR#/#D08770/g' \\n                -e 's/#THEME_URGENT_BG#/#A3BE8C/g' \\n                -e 's/#THEME_URGENT_FG#/#4D3F3A/g' \\n                -e 's/#THEME_URGENT_FRAME#/#D08770/g' "$DUNST_CONFIG"\n            ;;\n    esac\n    pkill dunst && dunst &\nfi\n\n# More app theme symlinks\nbtop_dir="$HOME/.config/btop/themes"\ntmux_dir="$HOME/.config/tmux"\nneofetch_dir="$HOME/.config/neofetch"\nbat_dir="$HOME/.config/bat/themes"\nlf_dir="$HOME/.config/lf"\nmicro_dir="$HOME/.config/micro/colorschemes"\nhelix_dir="$HOME/.config/helix/themes"\nzellij_dir="$HOME/.config/zellij/themes"\nk9s_dir="$HOME/.config/k9s"\nhtop_dir="$HOME/.config/htop"\nranger_dir="$HOME/.config/ranger/colorschemes"\nmpv_dir="$HOME/.config/mpv/scripts/themes"\nncmpcpp_dir="$HOME/.config/ncmpcpp"\nmako_dir="$HOME/.config/mako"\nfoot_dir="$HOME/.config/foot/themes"\nswaylock_dir="$HOME/.config/swaylock"\n\nln -sf "$btop_dir/${THEME}.theme" "$btop_dir/current.theme" 2>/dev/null\nln -sf "$tmux_dir/${THEME}.conf" "$tmux_dir/current-theme.conf" 2>/dev/null\nln -sf "$neofetch_dir/${THEME}.conf" "$neofetch_dir/config.conf" 2>/dev/null\nln -sf "$bat_dir/${THEME}.tmTheme" "$bat_dir/current.tmTheme" 2>/dev/null\nln -sf "$lf_dir/colors-${THEME}.conf" "$lf_dir/colors.conf" 2>/dev/null\nln -sf "$micro_dir/${THEME}.ini" "$micro_dir/current-theme.ini" 2>/dev/null\nln -sf "$helix_dir/${THEME}.toml" "$helix_dir/current.toml" 2>/dev/null\nln -sf "$zellij_dir/${THEME}.kdl" "$zellij_dir/current-theme.kdl" 2>/dev/null\nln -sf "$k9s_dir/skin-${THEME}.yaml" "$k9s_dir/skin.yaml" 2>/dev/null\nln -sf "$htop_dir/${THEME}.rc" "$htop_dir/htoprc" 2>/dev/null\nln -sf "$ranger_dir/${THEME}.conf" "$ranger_dir/colorschemes/current.conf" 2>/dev/null\nln -sf "$mpv_dir/${THEME}.lua" "$mpv_dir/current-theme.lua" 2>/dev/null\nln -sf "$ncmpcpp_dir/${THEME}.config" "$ncmpcpp_dir/config" 2>/dev/null\nln -sf "$mako_dir/${THEME}.conf" "$mako_dir/config" 2>/dev/null\nln -sf "$foot_dir/${THEME}.ini" "$foot_dir/current-theme.ini" 2>/dev/null\nln -sf "$swaylock_dir/${THEME}.conf" "$swaylock_dir/config" 2>/dev/null\n\n# Advanced GTK/Qt tricks\n# Set GTK font and monospace font\ncase $THEME in\n    forest)\n        gsettings set org.gnome.desktop.interface font-name "Inter 11"\n        gsettings set org.gnome.desktop.interface monospace-font-name "JetBrainsMono Nerd Font 11"\n        ;;\n    water)\n        gsettings set org.gnome.desktop.interface font-name "Cantarell 11"\n        gsettings set org.gnome.desktop.interface monospace-font-name "JetBrainsMono Nerd Font 11"\n        ;;\n    desert)\n        gsettings set org.gnome.desktop.interface font-name "Fira Sans 11"\n        gsettings set org.gnome.desktop.interface monospace-font-name "JetBrainsMono Nerd Font 11"\n        ;;\nesac\n# Optionally patch qt5ct/qt6ct color config with sed for accent color\nif [ -f "$qt5ct_dir/colors.conf" ]; then\n    sed -i "s/^accentColor=.*/accentColor=#88C0D0/" "$qt5ct_dir/colors.conf"\nfi\nif [ -f "$qt6ct_dir/colors.conf" ]; then\n    sed -i "s/^accentColor=.*/accentColor=#88C0D0/" "$qt6ct_dir/colors.conf"\nfi\n\n# --- Live reload for every app possible ---\n\n# Kitty (already reloads via SIGUSR1)\n# WezTerm (already reloads via cli)\n# Alacritty: send SIGUSR1 if running\npgrep -x alacritty | xargs -r kill -SIGUSR1\n# Foot: send SIGUSR1 if running\npgrep -x foot | xargs -r kill -SIGUSR1\n# btop: send --reload if running\npgrep -x btop && btop --reload &>/dev/null\n# tmux: reload config if running\npgrep -x tmux && tmux source-file "$tmux_dir/current-theme.conf"\n# ranger: reload colors if running\npgrep -x ranger && ranger --cmd reload &>/dev/null\n# nvim: set colorscheme if running (headless)\npgrep -x nvim && nvim --headless "+colorscheme current-theme" +q &>/dev/null\n# lazygit: send SIGHUP if running\npgrep -x lazygit | xargs -r kill -SIGHUP\n# mako: reload config if running\npgrep -x mako | xargs -r kill -SIGUSR1\n# dunst: already restarted above\n# waybar: already reloads above\n# rofi: no reload needed, picks up theme on next launch\n# mpv: reload scripts if running\npgrep -x mpv | xargs -r kill -SIGHUP\n# htop: no live reload, restart to pick up config\n# neofetch: picks up config on next run\n# starship: picks up config on next prompt\n# obsidian: may require restart for theme\n# swaylock: picks up config on next lock\n# ncmpcpp: send USR1 to reload config\npgrep -x ncmpcpp | xargs -r kill -USR1\n# bat: picks up theme on next run\n# yazi: picks up config on next run\n# zathura: send SIGHUP to reload config\npgrep -x zathura | xargs -r kill -SIGHUP\n# k9s: send SIGHUP to reload skin\npgrep -x k9s | xargs -r kill -SIGHUP\n# micro: picks up theme on next run\n# helix: picks up theme on next run\n# zellij: send SIGHUP to reload theme\npgrep -x zellij | xargs -r kill -SIGHUP\n\n# --- pywal/pywalfox integration (if available) ---\nif command -v wal &>/dev/null; then\n    wal -i "$WALLPAPER" --saturate 0.7 --backend auto\n    # pywalfox for Firefox\n    if command -v pywalfox &>/dev/null; then\n        pywalfox update\n    fi\nfi\n\n# --- VSCode live theme switching ---\nif pgrep -x code &>/dev/null; then\n    # Reload VSCode window (simulate Ctrl+R via wmctrl/xdotool if available)\n    if command -v wmctrl &>/dev/null && command -v xdotool &>/dev/null; then\n        for wid in $(wmctrl -lx | awk '/code.Code/ {print $1}'); do\n            xdotool windowactivate $wid key ctrl+r\n        done\n    fi\nfi\n\n# --- Firefox live theme switching ---\nif pgrep -x firefox &>/dev/null; then\n    pkill -HUP firefox\nfi\n\n# --- Logging ---\necho "[set_theme.sh] Theme switched to $THEME and all apps reloaded."\n\nnotify-send "Theme Switch" "Activated $THEME theme" 